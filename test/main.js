var index_1 = require("../index");
var chai = require("chai");
var expect = chai.expect;
var WpaMan;
before(function () {
    WpaMan = new index_1.default(__dirname + "/../wpa_supplicant.example.conf");
});
describe('wifilist', function () {
    it('is started', function () {
        expect(WpaMan.listwpa).to.be.ok;
    });
    it('There is a list of networks', function () {
        expect(WpaMan.listwpa).to.be.an("Array");
    });
    it('network is an object', function () {
        expect(WpaMan.listwpa[0]).to.be.an("object");
    });
    it('network has property: essid, #psk, psk', function () {
        expect(WpaMan.listwpa[0]).to.have.property("ssid");
        expect(WpaMan.listwpa[0]).to.have.property("psk");
        expect(WpaMan.listwpa[0]).to.have.property("#psk");
        expect(WpaMan.listwpa[1]).to.have.property("ssid");
        expect(WpaMan.listwpa[1]).to.have.property("psk");
        expect(WpaMan.listwpa[1]).to.have.property("#psk");
    });
    it('can add a wpa network', function (done) {
        WpaMan.addwpa('bao', 'migrhtrthrcio').then(function (a) {
            expect(a).to.be.ok;
            done();
        }).catch(function (err) {
            expect(err).to.not.exist;
            done();
        });
    });
    it('can remove a wpa network', function (done) {
        WpaMan.removewpa('bao').then(function (a) {
            expect(a).to.be.ok;
            done();
        }).catch(function (err) {
            expect(err).to.not.exist;
            done();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,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QyxVQUFVLENBQUM7WUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFBO1lBRWxCLElBQUksRUFBRSxDQUFBO1FBQ1YsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRztZQUNsQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUE7WUFDeEIsSUFBSSxFQUFFLENBQUE7UUFFVixDQUFDLENBQUMsQ0FBQTtJQUdOLENBQUMsQ0FBQyxDQUFBO0FBRU4sQ0FBQyxDQUFDLENBQUEiLCJmaWxlIjoidGVzdC9tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdNQU4gZnJvbSBcIi4uL2luZGV4XCI7XG5cbmltcG9ydCAqIGFzIGNoYWkgZnJvbSBcImNoYWlcIlxuXG5jb25zdCBleHBlY3QgPSBjaGFpLmV4cGVjdFxubGV0IFdwYU1hblxuXG5iZWZvcmUoZnVuY3Rpb24gKCkge1xuICAgIFdwYU1hbiA9IG5ldyBXTUFOKF9fZGlybmFtZSArIFwiLy4uL3dwYV9zdXBwbGljYW50LmV4YW1wbGUuY29uZlwiKTtcbn0pXG5cblxuZGVzY3JpYmUoJ3dpZmlsaXN0JywgZnVuY3Rpb24gKCkge1xuICAgIGl0KCdpcyBzdGFydGVkJywgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGV4cGVjdChXcGFNYW4ubGlzdHdwYSkudG8uYmUub2tcbiAgICB9KVxuXG5cbiAgICBpdCgnVGhlcmUgaXMgYSBsaXN0IG9mIG5ldHdvcmtzJywgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgIGV4cGVjdChXcGFNYW4ubGlzdHdwYSkudG8uYmUuYW4oXCJBcnJheVwiKVxuICAgIH0pXG5cblxuICAgIGl0KCduZXR3b3JrIGlzIGFuIG9iamVjdCcsIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICBleHBlY3QoV3BhTWFuLmxpc3R3cGFbMF0pLnRvLmJlLmFuKFwib2JqZWN0XCIpXG4gICAgfSlcbiAgICBpdCgnbmV0d29yayBoYXMgcHJvcGVydHk6IGVzc2lkLCAjcHNrLCBwc2snLCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgZXhwZWN0KFdwYU1hbi5saXN0d3BhWzBdKS50by5oYXZlLnByb3BlcnR5KFwic3NpZFwiKVxuICAgICAgICBleHBlY3QoV3BhTWFuLmxpc3R3cGFbMF0pLnRvLmhhdmUucHJvcGVydHkoXCJwc2tcIilcbiAgICAgICAgZXhwZWN0KFdwYU1hbi5saXN0d3BhWzBdKS50by5oYXZlLnByb3BlcnR5KFwiI3Bza1wiKVxuXG4gICAgICAgIGV4cGVjdChXcGFNYW4ubGlzdHdwYVsxXSkudG8uaGF2ZS5wcm9wZXJ0eShcInNzaWRcIilcbiAgICAgICAgZXhwZWN0KFdwYU1hbi5saXN0d3BhWzFdKS50by5oYXZlLnByb3BlcnR5KFwicHNrXCIpXG4gICAgICAgIGV4cGVjdChXcGFNYW4ubGlzdHdwYVsxXSkudG8uaGF2ZS5wcm9wZXJ0eShcIiNwc2tcIilcblxuXG4gICAgfSlcblxuXG5cblxuICAgIGl0KCdjYW4gYWRkIGEgd3BhIG5ldHdvcmsnLCBmdW5jdGlvbiAoZG9uZSkge1xuXG4gICAgICAgIFdwYU1hbi5hZGR3cGEoJ2JhbycsICdtaWdyaHRydGhyY2lvJykudGhlbihmdW5jdGlvbiAoYSkge1xuICAgICAgICAgICAgZXhwZWN0KGEpLnRvLmJlLm9rXG5cbiAgICAgICAgICAgIGRvbmUoKVxuICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBleHBlY3QoZXJyKS50by5ub3QuZXhpc3RcbiAgICAgICAgICAgIGRvbmUoKVxuXG4gICAgICAgIH0pXG5cblxuICAgIH0pXG5cbiAgICBpdCgnY2FuIHJlbW92ZSBhIHdwYSBuZXR3b3JrJywgZnVuY3Rpb24gKGRvbmUpIHtcblxuICAgICAgICBXcGFNYW4ucmVtb3Zld3BhKCdiYW8nKS50aGVuKGZ1bmN0aW9uIChhKSB7XG4gICAgICAgICAgICBleHBlY3QoYSkudG8uYmUub2tcblxuICAgICAgICAgICAgZG9uZSgpXG4gICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIGV4cGVjdChlcnIpLnRvLm5vdC5leGlzdFxuICAgICAgICAgICAgZG9uZSgpXG5cbiAgICAgICAgfSlcblxuXG4gICAgfSlcblxufSlcblxuXG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
